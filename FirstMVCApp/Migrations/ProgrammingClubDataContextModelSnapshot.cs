// <auto-generated />
using System;
using FirstMVCApp.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FirstMVCApp.Migrations
{
    [DbContext(typeof(ProgrammingClubDataContext))]
    partial class ProgrammingClubDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodeSnippetModel", b =>
                {
                    b.Property<Guid>("IDCodeSnippet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTimeAdded")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IDMember")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<int>("Revision")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IDCodeSnippet");

                    b.ToTable("CodeSnippets");
                });

            modelBuilder.Entity("FirstMVCApp.Models.AnnouncementModel", b =>
                {
                    b.Property<Guid?>("IdAnnouncement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("IdAnnouncement");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("FirstMVCApp.Models.MemberModel", b =>
                {
                    b.Property<Guid>("IDMember")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDMember");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("FirstMVCApp.Models.MembershipModel", b =>
                {
                    b.Property<Guid>("IDMembership")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IDMembershipType1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<Guid>("MemberIDMember")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IDMembership");

                    b.HasIndex("IDMembershipType1");

                    b.HasIndex("MemberIDMember");

                    b.ToTable("Memberships");
                });

            modelBuilder.Entity("FirstMVCApp.Models.MembershipTypeModel", b =>
                {
                    b.Property<Guid>("IDMembershipType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubscriptionLengthInMonths")
                        .HasColumnType("int");

                    b.HasKey("IDMembershipType");

                    b.ToTable("MembershipTypes");
                });

            modelBuilder.Entity("FirstMVCApp.Models.MembershipModel", b =>
                {
                    b.HasOne("FirstMVCApp.Models.MembershipTypeModel", "IDMembershipType")
                        .WithMany()
                        .HasForeignKey("IDMembershipType1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FirstMVCApp.Models.MemberModel", "Member")
                        .WithMany()
                        .HasForeignKey("MemberIDMember")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IDMembershipType");

                    b.Navigation("Member");
                });
#pragma warning restore 612, 618
        }
    }
}
